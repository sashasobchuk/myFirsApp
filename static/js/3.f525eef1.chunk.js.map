{"version":3,"sources":["components/utils/validators/validators.js","components/Profile/Profile_info/Profile_info.module.css","components/form_controls/form_control.module.css","components/Profile/myposts/posts.module.css","components/Profile/myposts/post/post.module.css","components/Profile/Profile_page.module.css","components/Profile/Profile_info/Profile_status/Profile_statusHUKS.tsx","components/form_controls/form_controls.tsx","components/Profile/Profile_info/User_description_Owner.jsx","components/Profile/Profile_info/Profile_info.jsx","components/Profile/myposts/post/post.js","components/Profile/myposts/posts.js","components/Profile/myposts/posts_conteiner.js","components/Profile/Profile_page.js","components/Profile/Profile_pageConteiner.js"],"names":["required","value","max_letngtcreator","maxLength","length","module","exports","Profile_status_with_hoock","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","onChange","e","currentTarget","Put_status_T","FormControl","input","meta","touched","error","children","haveError","className","styles","formControl","Textarea","restProps","child","Input","CreateField","name","placeholder","validate","component","type","text","Field","User_description_OwnerReduxform","reduxForm","form","isOwner","fromEditMode","handleSubmit","profile","onSubmit","clas","formSumError","chMode","uperFoled","classes","SM_Main","Object","keys","contacts","map","key","User_description","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","SM","SM1","Profile_info","onUpload","uploadProfile","isEditMode","SetEditMode","Preloader","AllUperPart","ava","arbat","src","photos","large","letUserFoto","alt","uploadFile","target","files","initialValues","formData","then","Post","main","item","htmlFor","like_count","Posts","React","memo","console","log","post_item","post_data","post_1","masage_text","id","Post_form_reduxform","addPost","add_post_form_text","maxlength2","action","Posts_conteyner","connect","state","profile_page","dispatch","addPost_action_creator","Profile_page","fullProfilePage","Profile_pageC","userId","this","match","params","autorized_user_id","history","push","get_user_T","get_status_T","refreshPage","prevProps","prevState","snapshot","Component","compose","auth","autorized_isOuth","isOuth","withRouter"],"mappings":"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","file":"static/js/3.f525eef1.chunk.js","sourcesContent":["export const required = (value) => {\r\n\r\n    if(value) return undefined;\r\n\r\n    //return undefined\r\n    return 'field is required '\r\n}\r\nexport const max_letngtcreator=(maxLength) => (value) => {\r\n    if(value.length  > maxLength) return `max length must be ${maxLength} letters`;\r\n    return undefined;\r\n}\r\n\r\n\r\nexport const min_letgth = (value) => {\r\n    if(value.length < 10) return \"must be more than 10 letters\"\r\n    return undefined;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllUperPart\":\"Profile_info_AllUperPart__16ek4\",\"ava\":\"Profile_info_ava__22xKd\",\"SM\":\"Profile_info_SM__sxQpl\",\"SM_Main\":\"Profile_info_SM_Main__3fAU4\",\"SM1\":\"Profile_info_SM1__1CAgK\",\"chMode\":\"Profile_info_chMode__291yc\",\"uploadFile\":\"Profile_info_uploadFile__2Gc9g\",\"uperFoled\":\"Profile_info_uperFoled__1uVE_\",\"status\":\"Profile_info_status__3mwvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"form_control_formControl__1jB_T\",\"error\":\"form_control_error__1xToc\",\"formSumError\":\"form_control_formSumError__3aOQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"posts_main__znw3U\",\"ava\":\"posts_ava__2pNsk\",\"item\":\"posts_item__2PSxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"post_main__17MvP\",\"item\":\"post_item__1PBuj\",\"like_count\":\"post_like_count__2WuQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullProfilePage\":\"Profile_page_fullProfilePage__3nQua\"};","import React, {useEffect, useState} from \"react\";\r\n///import Status_text from \"./Profile_status_text\";\r\n\r\nconst Profile_status_with_hoock = (props:any) => {\r\n\r\n    //let statewithState = useState(false)\r\n    //let editMode = statewithState[0]\r\n    //let set_editMode = statewithState[1]\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus]= useState(props.status)\r\n\r\n     useEffect( ()=>{setStatus(props.status)},[props.status])\r\n\r\n    let activate_edit_mode = () =>{setEditMode(true)}\r\n    let deactivate_edit_mode = () =>{\r\n        setEditMode(false)\r\n       props.Put_status_T(status)\r\n    }\r\n    let onStatusChange = (e:any) =>{setStatus(e.currentTarget.value)}\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onClick={activate_edit_mode}> {props.status || '--------'} </span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n\r\n            <input autoFocus={true}\r\n                   onChange={onStatusChange}\r\n                   value={status} />\r\n        <button onClick={deactivate_edit_mode}> вдправити</button>\r\n        </div>\r\n\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Profile_status_with_hoock\r\n\r\n\r\n// <div onDoubleClick={this.deactivate}>\r\n//     <input onChange={this.on_status_change} autoFocus={true} value={this.state.status}/>\r\n//     <button onClick={this.deactivate}>button</button>\r\n// </div>\r\n\r\n\r\n//console.log(prevProps, 'prevProps')\r\n//console.log(prevState, 'prevState')\r\n//console.log(this.props, 'this.props')\r\n//console.log(this.state, 'this.state')","import React from \"react\";\r\nimport styles from \"./form_control.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\n// @ts-ignore\r\nconst FormControl = ({input, meta:{touched,error}, children, ...props}) => {\r\n\r\n    const haveError = touched && error;\r\n\r\n    return <div>\r\n        <div className={styles.formControl + \" \" + (haveError ? styles.error : '')}>\r\n            <div>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n                {haveError && <span>{error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const Textarea = (props:any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\nexport const Input = (props:any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n// @ts-ignore\r\nexport const CreateField = (name, placeholder, validate, component,\r\n                            type='textarea',props = {}, text = '') => {\r\n    //const maxLength100 = max_letngtcreator(40)\r\n    return (\r\n        <div>\r\n            <Field name={name} placeholder={placeholder}\r\n                   validate={validate} component={component} type={type}/> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Profile_info.module.css\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {CreateField, Input} from \"../../form_controls/form_controls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport clas from \"../../form_controls/form_control.module.css\";\r\n\r\nconst User_description_Owner = ({isOwner, fromEditMode, handleSubmit, profile,error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={clas.formSumError}><h4> {error}</h4></div>}\r\n\r\n        <div>\r\n            {isOwner && <div>\r\n            </div>}\r\n            <b className={clas.chMode} onClick={fromEditMode}> chande information</b>\r\n        </div>\r\n        <div className={clas.uperFoled}>\r\n            {CreateField(\"fullName\", 'fullName', [required], Input)}\r\n            {CreateField(\"aboutMe\", 'AboutMe', [required], Input)}\r\n            {CreateField(\"lookingForAJobDescription\", 'looking job(CV)', [required], Input)}\r\n            <button> safe1111</button>\r\n        </div>\r\n        <div className={classes.SM_Main}>\r\n            {\r\n                Object.keys(profile.contacts).map(key => {\r\n                    return <div>\r\n                    <b key={key}>{key}{CreateField(\"contacts.\"+key, key,\r\n                        [], Input,)}\r\n                    </b>\r\n                    </div>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst User_description_OwnerReduxform = reduxForm({form: 'userProfile',})\r\n(User_description_Owner)\r\n\r\nexport default User_description_OwnerReduxform\r\n\r\n","import React, {useState} from \"react\";\r\nimport clas from \"./Profile_info.module.css\"\r\nimport Preloader from \"../../Preloader/Preloader/Preloader\";\r\nimport Profile_status_with_hoock from \"./Profile_status/Profile_statusHUKS\";\r\nimport letUserFoto from \"../../../acets/images/Foto/standatr_foto_ForAva.png\"\r\nimport User_description_Owner from \"./User_description_Owner\";\r\n\r\nconst Profile_info = ({profile, isOwner, status, Put_status_T, onUpload, uploadProfile,}) => {\r\n    let [isEditMode, SetEditMode] = useState(false)\r\n    if (!profile) {\r\n        return <div><Preloader/> profile in the loading</div>\r\n    }\r\n    let dounloudFoto = (e) => {\r\n        if (e.target.files[0]) {\r\n            onUpload(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit =  (formData) => {\r\n         uploadProfile(formData).then(\r\n             ()=>{\r\n                 SetEditMode(false)\r\n             }\r\n         )\r\n    }\r\n    return <div>\r\n        <div className={clas.AllUperPart}>\r\n            <div>\r\n                <div className={clas.ava}>\r\n                    {/**here be a foto of proofile_Page**/}\r\n                    <img className={clas.arbat} src={profile.photos.large || letUserFoto} alt=\"\"/><br/>\r\n                    {isOwner && <input className={clas.uploadFile} type={'file'} onChange={dounloudFoto}/>}\r\n                </div>\r\n                <span className={clas.status}>STATUS:</span><Profile_status_with_hoock status={status} Put_status_T={Put_status_T}/>\r\n                {isEditMode\r\n                    ? <User_description_Owner\r\n                        initialValues={profile}\r\n                        profile={profile} isOwner={isOwner}\r\n                        SetEditMode={SetEditMode}\r\n                        fromEditMode={() => {\r\n                            SetEditMode(false)\r\n                        }}\r\n                        onSubmit={onSubmit}\r\n\r\n                    />\r\n                    : <User_description profile={profile} isOwner={isOwner}\r\n                                        toEditMode={() => {\r\n                                            SetEditMode(true)\r\n                                        }}/>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nconst User_description = ({profile, isOwner, toEditMode,}) => {\r\n\r\n    return <form>\r\n        <div>\r\n            {isOwner &&\r\n            <b className={clas.chMode} onClick={toEditMode}> chande edit mode </b>}\r\n        </div >\r\n        <div className={clas.uperFoled} >\r\n            <div  >\r\n                {\"FULL NAME:       \"}<span >{profile.fullName ? profile.fullName : \"______\"}</span>\r\n            </div>\r\n            <div>\r\n                {\"looking job: \"}<span>{profile.lookingForAJob ? 'yes ' : \" ______\"}</span>\r\n            </div>\r\n            <div>\r\n                {\"My CV: \"}<span>{profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"______\"}</span>\r\n            </div>\r\n            <div>\r\n                {\" aboutMe \"}<span>{profile.aboutMe ? profile.aboutMe : \"______\"}</span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className={clas.SM_Main}>\r\n            {/**CONTACTS    **/}\r\n            <b>{\"my contacts\"} </b>\r\n            {\r\n                Object.keys(profile.contacts).map(key => {\r\n\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    profile={profile}\r\n                                    contactValue={profile.contacts[key]}\r\n                    />\r\n                })}\r\n        </div>\r\n    </form>\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\r\n    return <div className={clas.SM}>\r\n        {<b className={clas.SM1}>{contactTitle}</b>} :\r\n        {<span>{contactValue || '  - - - - -'}</span>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Profile_info\r\n\r\n//    // const onSubmit = (formData) => {\r\n//     //\r\n//     //     uploadProfile(formData).then(()=>{\r\n//     //         debugger\r\n//     //         SetEditMode(false)\r\n//     //     })\r\n//     //         //.catch(SetEditMode(true))\r\n//     // }","import React from \"react\";\r\nimport classes from \"./post.module.css\"\r\n\r\n\r\n\r\nconst Post = (props)=>{\r\n\r\n    return(\r\n        <main className={classes.main}>\r\n            <div className={classes.item}>\r\n                <label htmlFor=\"logo\">\r\n                    <img name={props.name} src={props.src} alt=\"logo_posts\"/><span>{props.text}</span>\r\n                </label>\r\n            <span className={classes.like_count}>  {props.like_count}</span>\r\n                <button>кнопка</button>\r\n            </div>\r\n\r\n        </main>);\r\n};\r\nexport default Post","import React from \"react\";\r\nimport classes from \"./posts.module.css\"\r\nimport Post from \"./post/post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {max_letngtcreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../form_controls/form_controls\";\r\n\r\n\r\nconst Posts = React.memo((props) => {\r\n    console.log(\"yuoooooo\")\r\n    let post_item =\r\n        props.post_data.map((post_1) => <Post key={post_1.id}  text={post_1.masage_text} id={post_1.id} name={post_1.name}\r\n                                              src={post_1.src} like_count={post_1.like_count}/>);\r\n\r\n    let addPost_form=(value)=>{\r\n        props.addPost(value.add_post_form_text)\r\n    }\r\n    return (\r\n        <main className={classes.main}>\r\n            <Post_form_reduxform onSubmit={addPost_form}/>\r\n            <div className={classes.item}>{post_item}</div>\r\n        </main>);\r\n})\r\n\r\nconst maxlength2=max_letngtcreator(10)\r\nconst Post_form = (props) => {\r\n    return <div>\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n                <h3> My post</h3>\r\n                <label>\r\n                <Field  placeholder=\"введи текст\" name={'add_post_form_text'}\r\n                        component={Textarea} validate={[required,maxlength2]} />\r\n                    <button>add</button>\r\n                </label>\r\n        </form>\r\n    </div>\r\n}\r\nconst Post_form_reduxform=reduxForm({form:'post_write'})(Post_form)\r\nexport default Posts\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//let adde = React.createRef()\r\n//let addPost = () => {\r\n//props.dispatch(addPost_action_creator())\r\n//    props.addPost()\r\n//}\r\n// let on_post_change = () => {\r\n//     let text = adde.current.value\r\n//     props.changed_masage(text)\r\n//props.dispatch(on_post_change_action_creator(text))\r\n//}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {addPost_action_creator, } from \"../../../redux/Profile_reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MapStateToProps=(state)=> {\r\n    return{\r\n        post_data:state.profile_page.post_data,\r\n    }\r\n}\r\nconst MapDispatchToProps=(dispatch)=> {\r\n    return{\r\n        addPost:(add_post_form_text)=>{\r\n            dispatch(addPost_action_creator(add_post_form_text))\r\n        }\r\n    }\r\n}\r\nconst Posts_conteyner= connect (MapStateToProps,MapDispatchToProps)(Posts)\r\nexport default Posts_conteyner\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//new_post_text:state.profile_page.new_post_text\r\n\r\n\r\n///import StorContex from \"../../../StoreContext\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// changed_masage:(text)=>{\r\n//     let action = on_post_change_action_creator(text)\r\n//     dispatch(action)\r\n//\r\n//     //store.dispatch(on_post_change_action_creator(text))\r\n// },","import React from \"react\";\r\nimport Profile_info from \"./Profile_info/Profile_info\";\r\nimport Posts_conteyner from \"./myposts/posts_conteiner\";\r\nimport clas from './Profile_page.module.css'\r\nconst Profile_page = (props)=> {\r\n    return(\r\n        <main className={clas.fullProfilePage}>\r\n            <Profile_info status={props.status}\r\n                          profile={props.profile}\r\n                          Put_status_T={props.Put_status_T}\r\n                          onUpload={props.onUpload}\r\n                          isOwner = {props.isOwner}\r\n                          uploadProfile={props.uploadProfile}\r\n            />\r\n            <Posts_conteyner\r\n            />\r\n        </main>);\r\n};\r\nexport default Profile_page","import React from \"react\";\r\nimport Profile_page from \"./Profile_page\";\r\nimport {connect} from \"react-redux\";\r\nimport {get_status_T, get_user_T, onUpload, Put_status_T, uploadProfile} from \"../../redux/Profile_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass Profile_pageC extends React.Component {\r\n\r\n    refreshPage() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.autorized_user_id;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.get_user_T(userId)\r\n        this.props.get_status_T(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshPage()\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshPage()\r\n\r\n        }\r\n        if(prevProps.profile !==this.props.profile ){\r\n\r\n            this.refreshPage()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile_page\r\n                {...this.props}\r\n                isOwner = {!this.props.match.params.userId}\r\n                          status={this.props.status}\r\n                          Put_status_T={this.props.Put_status_T}\r\n                onUpload={this.props.onUpload}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profile_page.profile,\r\n        status: state.profile_page.status,\r\n        autorized_user_id: state.auth.userId,\r\n        autorized_isOuth: state.auth.isOuth,\r\n        isOwner:state.profile_page.isOwner,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {get_user_T, get_status_T,\r\n        uploadProfile,Put_status_T,onUpload}),\r\n    withRouter,\r\n    //With_outh_redirect\r\n)\r\n(Profile_pageC)\r\n\r\n\r\n/*\r\nlet Auth_redirect_componenta = With_outh_redirect(Profile_pageC)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(Auth_redirect_componenta)\r\n// цей другий параметр обовязково в {} бо не буде бачити його як функуію\r\nexport default connect(MapStateToProps, {get_user_T})(WithUrlDataContainerComponent)\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}